version: "3"
services:
  app:
    container_name: api.it
    build:
      context: ./infra/docker
    working_dir: /app
    env_file:
      - ./src/.env
    volumes:
      - ./src:/app
    depends_on:
      - redis
      - mysql
    networks:
      - bubble

  nginx:
    container_name: server.it
    image: nginx:1.19.2-alpine
    working_dir: /app
    volumes:
      - ./src:/app
      - ./infra/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    links:
      - app
    ports:
      - "81:80"
      - "442:443"
    depends_on:
      - app
    networks:
      - bubble

  mysql:
    container_name: db.it
    image: mysql:8.0.17
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: transfee
      MYSQL_USER: user
      MYSQL_PASSWORD: transfeedb
    ports:
      - "3398:3306"
    networks:
      - bubble

  redis:
    container_name: redis.it
    image: redis:6-alpine
    ports:
      - "6379:6379"

  zookeeper:
    container_name: zookeeper
    image: debezium/zookeeper:latest
    restart: on-failure
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    networks:
      - bubble

  kafka:
    container_name: kafka
    image: debezium/kafka:latest
    ports:
      - 9092:9092
    links:
      - zookeeper
    restart: on-failure
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - ADVERTISED_HOST_NAME=kafka
    networks:
      - bubble

networks:
  bubble:
    external: true
